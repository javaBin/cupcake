[versions]
arrow = "2.1.2"
cache4k = "0.14.0"
dependency_analysis = "2.19.0"
detekt = "1.23.8"
gradle_versions_filter = "0.1.16"
kotest = "6.0.0.M8"
kotlin_logging = "7.0.11"
kotlin = "2.2.0"
kotlinter = "5.2.0"
kotlinx_coroutines = "1.10.2"
kotlinx_serialization = "1.9.0"
ktor = "3.2.3"
logback = "1.5.18"
prometheus = "1.15.2"
serialization = "2.2.0"
release = "3.1.0"

[libraries]
arrow-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow" }

cache4k = { group = "io.github.reactivecircus.cache4k", name="cache4k", version.ref = "cache4k" }

kotlin-logging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlin_logging" }

kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx_serialization" }

ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-call-id = { group = "io.ktor", name = "ktor-client-call-id", version.ref = "ktor" }

ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }

ktor-serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus" }

ktor-server-test-host = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotest = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

[bundles]
ktor-client = ["ktor-client-content-negotiation", "ktor-client-core", "ktor-client-logging", "ktor-client-cio", "ktor-client-call-id", "ktor-client-auth"]
ktor-server = ["ktor-server-auth", "ktor-server-auth-jwt", "ktor-server-call-id", "ktor-server-call-logging", "ktor-server-content-negotiation", "ktor-server-core", "ktor-server-metrics-micrometer", "ktor-server-cio", "ktor-server-status-pages", "ktor-serialization", "kotlinx-serialization", "ktor-server-compression", "ktor-server-cors"]
test = ["ktor-server-test-host", "kotest", "kotest-assertions", "ktor-client-mock"]

[plugins]
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependency_analysis" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serialization" }
versions = { id = "se.ascp.gradle.gradle-versions-filter", version.ref = "gradle_versions_filter" }
release = { id = "net.researchgate.release", version.ref = "release" }